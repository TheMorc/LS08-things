<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfHiIUHh0hYx4dIYwfHiKNHh0hYB4dIQ4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHx4iAh8eInUfHiL1Hx4i/x8eIv8fHiL/Hx4i/x8eIu0fHiJbAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAeHSEBHh0hkh4dIf4fHiL/Hh0h/i0sMP5FREf/LS0w/h4dIf4fHiL8Hx4iZAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHSFUHh0h/h4dIf4fHiL/hIOF/vPz9P7/////9vb2/qal
        p/4mJSn/Hx4i9R8eIicAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHx4iAR8eIgcfHiIDAAAAAAAAAAAAAAAAAAAAAB8eIgEfHiLaHx4i/x8eIv9tbW///v7+////
        //////////////////+1tLb/Hx4i/x8eIqUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB4dIRkfHiKMHh0h1h4dIe0fHiLlHh0hpR4dISkAAAAAAAAAAB8eIjweHSH+Hh0h/h8e
        Iv7g3+D//v7+/v7+/v7//////v7+/v7+/v79/f3/UVFU/h4dIfYfHiIMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHx4iOR8eIukfHiL/Hx4i/x8eIv8fHiL/Hx4i/x8eIvIgHyNCAAAAAB8e
        InwfHiL/Hx4i/0VER/r///////////j4+P+enZ//9/f3////////////lpWX/x8eIv8fHiJDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHiIbHh0h6x4dIf4nJin/h4eJ/q+usP7b29v/pKSm/jY1
        Of4fHiLuISAkJB8eIqEeHSH+Hh0h/mtqbfL//////v7+/ra1t/4fHiL/kZCS/v7+/v7/////trW3/h4d
        If4fHiJmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHh0hAh8e
        IjkeHSF9Hh0hph8eIq8eHSFPHh0hPQAAAAAAAAAAAAAAAAAAAAAfHiKUHh0h/iAfI/7AwMH/+/v7/u7u
        7v7/////8/P0/re3uP4xMDT/Hx4ivR8eIrUeHSH+Hh0h/nJydO3//////v7+/szMzf4qKS3/urq7/v7+
        /v7/////trW3/h4dIf4fHiJrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAeHSEXHh0hvR8eIv4eHSH+Hh0h/h8eIv8eHSH+Hh0hvB8eIlwAAAAAAAAAAAAAAAAfHiLoHh0h/l9f
        Yv7//////v7+/v7+/v7h4eH/7Ozt/rq6u/6NjI7/Hh0h/h8eIvIeHSH+Hh0h/lJRVeH//////v7+/v7+
        /v729vb//v7+/v7+/v7/////lZWX/h4dIf4fHiJaAAAAAB4dIRUfHiJMHh0heR4dIXYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAeHSGxHh0h/h8eIv8eHSH+Hh0h/h8eIv8eHSH+Hh0h/h8eIvoeHSEeHh0hBAAA
        AAAfHiL/Hx4i/4+Pkf///////////5qZm/8fHiL/Ojk9//b29v9sa27/Hx4i/x8eIv8fHiL/Hx4i/yIh
        JfDt7e7k///////////////////////////9/f3/UVFU/x8eIv8fHiJMHx4iox8eIvkfHiL/Hx4i/x8e
        IvIfHiJKHx4iIAAAAAAAAAAAAAAAAB8eIkkfHiL9Hx4i/x8eIv8fHiL/Hx4i/x8eIv8hICT/Hx4i/x8e
        Iv8fHiL9Hx4iLwAAAAAfHiL/Hh0h/omJi/7//////v7+/lhXWv4fHiL/JyYq/rOyx/5KSG//Hx4w/h8e
        Iv8eHSH+Hh0h/h4dIf5+fYDI/v7++v7+/v7//////v7+/v7+/v63trj9Hx4i/h4dIf4fHiL1Hh0h/h4d
        If4fHiL/Hh0h/h4dIf4fHiL/Hx4newAAAAAAAAAAIiBZDx8eIu0eHSH+Hh0h/h8eIv8eHSH+KCcr/qio
        qv/n5+j+sK+x/i4tMf8eHSH+Hx4ibwAAAAAfHiLoHh0h/lJRVP7/////9/f3/lZVWP4fHi3/Ix+T/iUf
        yv4mIM3/JR/H/iIfe/8eHSH+Hh0h/h4dIf4fHiL6d3Z5wNbV1sb////j8fHy36Gho+QpKCz7Hh0h/iko
        K/4rKi3/JiYp/iIhJf4fHiL/Hh0h/h4dIf4fHiL/Hx4i+yMga8orJcChKiWnlB8eL/geHSH+Hh0h/h8e
        Iv8eHSH+n56g/v/////+/v7+/v7+/tDP0P83Njr+Hh0h/B4dITAfHiKUHx4i/x8eIv+wsLH/7u7u/9jX
        2P8rKIr/JiDN/yYgzf8mIM3/JiDN/yUfw/8fHiL/IiEl/x8fIv8fHiL/Hx4i/x8eIvwfHiLiHx4i8x8e
        Iv8fHiL/JSQo/0JCQv9MTEv/Tk5N/09PTv9LS0r/IB8j/x8eIv8fHiL/Hx4i/yQfqf2Eg5fIcW6+/iAe
        Tf8fHiL/Hx4i/x8eIv8qKS3+9PP0//////////////////////+VlZf/Hx4i/x8eIi0fHiIhHh0h8h4d
        If4lJSj/ZGRn/rGxsv5RTpX/Ozl7/k1Kgf5APXj/X1yl/jk0tf8iH4H+NjU3/kBAQP4iIST/Hh0h/h4d
        If4fHiL/Hh0h/h8eIv4vLjH/RERE/jg4Of42NTf/Nzc4/j4+P/5FRUX/IB8j/h4dIf4fHiL/Hh0h/iQf
        ov8oJyvvPTqK8yEeWv8eHSH+Hh0h/h8eIv9PT1L1/v7+/v/////+/v7+/v7+/v/////Ly8z+Hh0h/h4d
        IawAAAAAHh0hWx4dIfsfHiL/Hh0h/jg3Ov5+fYD9nZye/r6+v/6GhYf/lJOV/kxJm/8lH8r+MTBO/k5O
        Tf5HRkb/Pz8//jo5O/40NDb/MC8x/jo6O/5CQkP/QD9A/jk5Ov48Ozz/Pj4//js6O/4/Pj//IB8j/h4d
        If4fHiL/Hh0h/iQfsv8jH4X+JB+w/iQfrP8fHiP+Hh0h/h8eIv9XVlno/v7+/v/////+/v7+39/g/v//
        ///s7Oz+Hx4i/h8eIocAAAAAAAAAAB8eIk4fHiLiHx4i/x8eIv96eXz7vLy9/6ioqf+RkJL/sbGy/01K
        nP8mIM3/JiNx/z8+P/8/Pz//QD9A/0BAQP9AQED/QUBB/0JCQv9GRUX/SkpJ/0lJSP9FRUX/QEBB/z8/
        P/8+Pj//MTAy/x8eIv8fHiL/Hx4i/yUfuv8mIM3/JiDN/yYgzf8fHi//Hx4i/x8eIv9XVlnm////////
        ///+/v7/6Ojo///////09PT/JSQo/x8eIrQAAAAAAAAAAAAAAAAfNjsJHzQ5SDhESGeur7HQ29vc/qGh
        o/5/f4H/qqmr/k1KnP8oRLb+IyFC/klISP5ERET/Pz9A/kVERf5PT07/Tk5N/k5OTf5KSkr/PDw9/kVF
        Rf5DQ0P/Q0ND/kNDQ/5CQkL/PT0+/iAfI/4fHiL/Hh0h/iQfqP8lH8z+JR/M/iYgzf8gHkT+Hh0h/h8e
        Iv9AQEPj/v7+/P/////+/v7+/v7+/v/////y8vL+IyIm/h4dIdIAAAAAAAAAAAAAAAAAAAAAILa+XCxV
        WpPW2Nm/wcHC/qqqq/53d3n/qaiq/kxZn/8o6PL+Ki0x/jAwMv5CQkL/Pj4+/j09Pv5PT07/Tk5N/k5O
        Tf5PT07/Q0JD/ktLSv5NTUz/Tk5N/k5OTf5PT07/MzI0/h4dIf4fHiL/Hh0h/iMfjf8lH8z+JR/M/iYg
        zf8hHmP+Hh0h/h8eIv8jIib25uXm4f/////+/v7+/v7+/v/////Z2dr+Hh0h/h8eInoAAAAAAAAAAAAA
        AAAAAAAAIOjxvh9la/SDg4Xv6unq/6alp/+jo6T/v76//0RFlP8hj7L/Hx8j/zMzNf9BQUH/Pj4//0ND
        Q/9PT07/T09O/0lJSP89PD3/OTk6/yopLP8fHiL/Pz8//09PTv9PT07/MTAy/x8eIv8fHiL/Hx4i/yEe
        aP8mIM3/JiDN/yYgzf8jH43/Hx4i/x8eIv8fHiL/kZGT0P////7///////////////+ampv/Hx4i/x8e
        IsIAAAAAAAAAAAAAAAAAAAAAIa21MTdXW3qNj5HBwcHC/o6NkP5wb3L/qqmr/jw5i/8lH8X+IyB+/kxM
        S/5ERET/PTw9/kpKSf5OTk3/Tk5N/jo6O/4+Pj//Ozs8/iYmKf4fHiL/QUFB/kBATP4+PVP/Kid0/iAe
        Sf4fHiL/Hh0h/h8eOP8lH8z+JR/M/iYgzf8lH7z+Hx4m/h8eIv8eHSH+JyYq7M7Nzsn+/v7+/v7+/uTk
        5PY1NDj+Hh0h/h4dI04AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACxs7WryMfI/o+OkP5iYWT/nZ2f/jEt
        gP8lH8z+JB+p/jAwMv5GRkb/SkpJ/k1NTP5KSkr/PTw9/khISP49PT7/Q0JD/iMiJv4fHiL/Li0w/ikl
        h/4mIM3/JR/M/iUftP4fHiX/Hh0h/h8eIv8kH6f+JR/M/iYgzf8lH8z+IB5R/h8eIv9lZWfbHh0h/iQj
        J+5oaGrGa2tt0i0sMPEeHSH+Hh0h/h8ePUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHRlKquLe5/6qp
        q/+4uLn/x8fI/ykmdf8mIM3/JR/H/yMfk/8oJIz/KyeA/zs4ff82NHL/IyFY/yooVP8zMVH/PDtO/yEg
        LP8fHif/Hx4j/yMfiP8mIM3/JiDN/yYgzf8hHmL/Hx4i/x8eIv8hHlr/JiDM/yYgzf8mIM3/Ix+W/x8e
        Iv8fHiL8Hx4i/x8eIv8fHiL/Hx4i/x8eIv8fHiL/Hx4i/yQfqeEAAAAAAAAAAAAAAAAAAAAAAAAAAC8t
        aDMsJ73vJB+n/iQfn/4kH6P/JB+x/iUfx/8lH8z+JR/M/iUfzP4mIM3/PzrS/s7M8/6xr+3/xcPx/rCt
        7P6joOn/cW3e/iUfyv4lH8H/JR+5/iUfxf4mIM3/JR/M/iUfzP4kH6L/Hh0h/h8eIv8fHiT+JB+j/iYg
        zf8lH8z+JR/K/iAeTf8eHSH+MC8z5x8eIv4eHSH+Hh0h/h8eIv8eHSH+IB5A/iMfm2sAAAAAAAAAAAAA
        AAAAAAAAAAAAACckfgsjH4uSJB+pvSMfmuckH6XzJB+z7iUfyeUlH8z0JR/M/iUfzP4mIM3/RUDU/pya
        6P7W1PX/dHDf/ra07v6BfuL/nZvo/omF4/5CPNP/JR/M/iUfzP4mIM3/JR/M/iUfzP4kH6L/Hh0h/h8e
        Iv8eHSH+Hx44/iUfvf8lH8z+JR/M/iUfvP8fHjf+Hh0h/h8eIv8eHSH+Hh0h/h8eIv8eHSL+Ih972CIe
        egkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIx+hCiEe
        WLoiHnP/Ih98/zUyif49OpT/KiWX/ygjsdQoIsrJJyHN1ychzeYmIM3xJiDN+yYgzf8mIMz+JR/F/CMf
        k/gfHi//Hx4i/x8eIssfHiLBHx4i/yAeQOclH8HdJiDN/yYgzf8lH7n/IB5J/x8eIv8fHiL/Hx4i/x8e
        JP8hHmfxIh6HNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB8eP0UfHiL/Hh0h/iAfKM4fHia7Hh0h/iIgQXEAAAAAAAAAAAAAAAAoIs0FJiDNGCUf
        ySYjH6IuHx42wh4dIf0fHiL2Hh0ieh8eIt4eHSHoHh0h8R8eIvYgHkSiJB+0fiUfzNwlH8z+JR/K/iQf
        nP8iH3X+Ih968iMfl6siHocqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8eIkEfHiK8Hx4icx8eIrIfHiLpHx4i/x8eJngAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHx43CB8eIq4fHiKKHx4iaB8eIr4fHiJoHx4iax8eInYfHi9qIh50DCQf
        vQMlH8AdIh6BaCAeReUiHnYxIh6ACwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4dIQEfHiL/Hh0hrgAAAAAfHiIoHh0hVR4d
        ISoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHh0hER4dIdUfHiLhHh0hVx8eIpkeHSEWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACAeSg0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4dIQgfHiL/Hh0hkAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHh0hnh4dIaEfHiLrHh0hgx8e
        IoYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8e
        IgwfHiL/Hx4igAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHx4inB8e
        IpkfHiJ3Hx4idB8eIggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB4dIREfHiL/Hh0hfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHh0hAx4dIRcfHiICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4dIRcfHiL/Hh0hfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8eIhgfHiL/Hx4ifwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4dIRcfHiL/Hh0heAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4d
        IQcfHiL/Hh0hagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAfHiLrHx4iSQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfHiI6Hh0hCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA//4H////AAD/+AP///8AAP/wAf///wAA//AA////AADx4AD///8AAMBg
        AH///wAAgCAAf///AAAAAAB/+A8AAAAAAH/wBwAAAAAAQ/ABAAAAAAAA4AEAAAAAAADAAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAOAAAAAAAAAA8AAAAAAAAADwAAAAAAAAAPAA
        AAAAAAAA/AAAAAAAAAD8AAAAAAAAAPgAAAAAAAAA+AAAAAAAAAD/+AAAAAEAAP/8BwAAAwAA//wH8AAP
        AAD//EfwP78AAP/8f/B//wAA//x/8H//AAD//H/x//8AAP/8f////wAA//x/////AAD//H////8AAP/8
        f////wAA//5/////AAD//n////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>